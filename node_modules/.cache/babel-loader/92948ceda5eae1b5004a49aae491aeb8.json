{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnab Poddar\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLogin: true,\n      email: '',\n      password: '',\n      error: ''\n    };\n\n    this.switchAuthModeHandler = () => {\n      this.setState({\n        isLogin: !this.state.isLogin,\n        error: ''\n      });\n    };\n\n    this.emailChangeHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordChangeHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.authenticate = event => {\n      event.preventDefault();\n      console.log(this.state.token);\n      var url;\n      if (this.state.isLogin) url = 'http://localhost:3000/login';else url = 'http://localhost:3000/signup';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        if (!(result.status === 201 || result.status !== 200)) this.setState({\n          error: 'Authentication failed'\n        });else {\n          this.setState({\n            error: ''\n          });\n          this.assignToken('12333');\n        }\n      }).catch(e => {\n        console.log(e);\n        this.setState({\n          error: 'Authentication failed'\n        });\n      });\n    };\n  }\n\n  assignToken(token) {\n    this.props.login(token);\n  }\n\n  removeToken() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            onChange: this.emailChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            onChange: this.passwordChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.authenticate,\n            children: this.state.isLogin ? 'Login' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: this.switchAuthModeHandler,\n            children: this.state.isLogin ? 'Create new account' : 'Login with existing account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: token => dispatch({\n      type: 'login',\n      token: token\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","map":{"version":3,"sources":["C:/Users/Arnab Poddar/Desktop/01-starting-project/src/components/Auth/AuthForm.js"],"names":["React","Component","connect","classes","AuthForm","state","isLogin","email","password","error","switchAuthModeHandler","setState","emailChangeHandler","event","target","value","passwordChangeHandler","authenticate","preventDefault","console","log","token","url","fetch","method","body","JSON","stringify","headers","then","res","json","result","status","assignToken","catch","e","props","login","removeToken","render","auth","control","actions","toggle","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './AuthForm.module.css';\n\n\nclass AuthForm extends Component{\n\n  assignToken(token) {\n    this.props.login(token);\n  }\n\n  removeToken() {}\n\n  state = {\n    isLogin: true,\n    email: '',\n    password: '',\n    error:''\n  }\n\n  switchAuthModeHandler = () => {\n    this.setState({isLogin: !this.state.isLogin, error: ''});\n  };\n\n  emailChangeHandler = (event) => {\n    this.setState({email: event.target.value});\n  }\n\n  passwordChangeHandler = (event) => {\n    this.setState({password: event.target.value});\n  }\n\n  authenticate = (event) => {\n    event.preventDefault();\n    console.log(this.state.token)\n    var url;\n    if(this.state.isLogin)\n      url = 'http://localhost:3000/login'\n    else  \n      url = 'http://localhost:3000/signup'\n\n    fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    )\n    .then(res => res.json())\n    .then((result) => {\n      console.log(result)\n      if(!(result.status === 201 || result.status !== 200))\n        this.setState({error: 'Authentication failed'})\n      else \n      {\n        this.setState({error: ''})\n        this.assignToken('12333');\n      \n      }\n    })\n    .catch((e) => {\n      console.log(e);\n      this.setState({error: 'Authentication failed'})\n    })\n\n  }\n\n  render () {\n    return (\n      <section className={classes.auth}>\n         <p>{this.state.error}</p>\n        <h1>{this.state.isLogin ? 'Login' : 'Sign Up'}</h1>\n        <form>\n          <div className={classes.control}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='email' id='email' required onChange={this.emailChangeHandler}/>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Your Password</label>\n            <input type='password' id='password' required onChange={this.passwordChangeHandler}/>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={this.authenticate}>{this.state.isLogin ? 'Login' : 'Create Account'}</button>\n            <button\n              type='button'\n              className={classes.toggle}\n              onClick={this.switchAuthModeHandler}\n            >\n              {this.state.isLogin ? 'Create new account' : 'Login with existing account'}\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { token: state.token };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return  {\n    login: (token) => dispatch({ type: 'login', token: token})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\n"]},"metadata":{},"sourceType":"module"}